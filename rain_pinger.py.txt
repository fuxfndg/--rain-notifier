import re
import time
from datetime import datetime
import requests
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By

# CONFIG
WEBHOOK_URL    = "https://discord.com/api/webhooks/1394992784221536286/RS2-n4FlLj6qo_MiHTGsI47agwhNwaFufrWAkouZljeSqUgDu5aOYl1w1zNLjSDt_WlO"
ROLE_ID        = "1395009065200910428"
RAIN_URL       = "https://rollbet.gg"
TRIGGER_MINUTE = 24
TRIGGERED      = set()
LAST_HOUR      = -1

def setup_driver():
    opts = Options()
    opts.add_argument("--headless")
    opts.add_argument("--disable-gpu")
    opts.add_argument("--no-sandbox")
    return webdriver.Chrome(options=opts)

def fetch_rain_amount():
    driver = setup_driver()
    try:
        driver.get(RAIN_URL)
        time.sleep(3)
        btn = driver.find_element(
            By.XPATH,
            "//button[contains(., 'Tip Rain')]"
        )
        text = btn.text.strip()
        match = re.search(r"\$[\d,]+\.\d{2}", text)
        return match.group(0) if match else "N/A"
    finally:
        driver.quit()

def send_discord_embed(rain_amount, start_time):
    embed = {
        "author": {
            "name": "Rain Notifier",
            "icon_url": "https://twemoji.maxcdn.com/v/latest/72x72/1f327.png"
        },
        "title": "üåßÔ∏è Rain Started! üí¶",
        "description": (
            f"Rain balance: **{rain_amount}**\n"
            f"üîó [Join the Rain!]({RAIN_URL})"
        ),
        "color": 0x1ABC9C,
        "thumbnail": {"url": "https://rollbet.gg/chip.png"},
        "fields": [
            {"name": "Start Time", "value": start_time, "inline": True},
            {"name": "Join Link",  "value": RAIN_URL,     "inline": True}
        ],
        "footer": {"text": "Triggered by Rain Notifier"},
        "timestamp": datetime.utcnow().isoformat()
    }

    payload = {
        "content": f"<@&{ROLE_ID}>",
        "allowed_mentions": {"parse": ["roles"]},
        "embeds": [embed]
    }
    resp = requests.post(WEBHOOK_URL, json=payload)
    if 200 <= resp.status_code < 300:
        print(f"‚úÖ Sent embed at {datetime.now().strftime('%H:%M:%S')}")
    else:
        print(f"‚ùå Error {resp.status_code}: {resp.text}")

def check_and_trigger():
    global LAST_HOUR
    now    = datetime.now()
    minute = now.minute
    second = now.second

    if now.hour != LAST_HOUR:
        TRIGGERED.clear()
        LAST_HOUR = now.hour

    if minute == TRIGGER_MINUTE and minute not in TRIGGERED and second < 5:
        start_time  = now.strftime("%H:%M:%S")
        rain_amount = fetch_rain_amount()
        send_discord_embed(rain_amount, start_time)
        TRIGGERED.add(minute)

if __name__ == "__main__":
    while True:
        check_and_trigger()
        time.sleep(1 - (time.time() % 1))